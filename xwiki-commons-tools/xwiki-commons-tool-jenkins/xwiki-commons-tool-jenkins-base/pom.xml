<?xml version="1.0" encoding="UTF-8"?>

<!--
 *
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
 *
-->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.xwiki.commons</groupId>
    <artifactId>xwiki-commons-tool-jenkins</artifactId>
    <version>4.4-SNAPSHOT</version>
  </parent>
  <artifactId>xwiki-commons-tool-jenkins-base</artifactId>
  <name>XWiki Commons - Tools - Jenkins - Base</name>
  <packaging>pom</packaging>
  <description>Base Job Configuration for Jenkins that other modules can depend on</description>
  <properties>
    <jenkins.url>http://localhost:8080/</jenkins.url>
    <jenkins.upload.skip>true</jenkins.upload.skip>
  </properties>
  <profiles>
    <profile>
      <id>jenkins</id>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>com.github.goldin</groupId>
              <artifactId>jenkins-maven-plugin</artifactId>
              <version>0.2.5</version>
              <executions>
                <execution>
                  <id>generate-jenkins-jobs</id>
                  <phase>compile</phase>
                  <goals>
                    <goal>generate</goal>
                  </goals>
                  <configuration>
                    <outputDirectory>${project.build.directory}</outputDirectory>
                    <generationPom>https://github.com/xwiki/xwiki-commons/blob/master/pom.xml</generationPom>
                    <jenkinsUrl>${jenkins.url}</jenkinsUrl>
                    <jobs combine.children="append">
                      <job>
                        <id>base</id>
                        <abstract>true</abstract>
                        <scmType>git</scmType>
                        <jdkName>default</jdkName>
                        <mavenName>Maven</mavenName>
                        <mavenOpts>-Xmx1536m -XX:MaxPermSize=512m -Xms256m</mavenOpts>
                        <numToKeep>20</numToKeep>
                        <mavenGoals>clean install -Plegacy,integration-tests -U -e</mavenGoals>
                        <reporters>
                          <![CDATA[
                        <hudson.maven.reporters.MavenMailer>
                        <recipients>notifications@xwiki.org</recipients>
                        <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
                        <sendToIndividuals>false</sendToIndividuals>
                        </hudson.maven.reporters.MavenMailer>
                      ]]>
                        </reporters>
                        <publishers>
                          <![CDATA[
                        <hudson.tasks.test.AggregatedTestResultPublisher>
                        <includeFailedBuilds>false</includeFailedBuilds>
                        </hudson.tasks.test.AggregatedTestResultPublisher>
                        <hudson.plugins.emotional__hudson.EmotionalHudsonPublisher/>
                      ]]>
                        </publishers>
                        <blockBuildWhenUpstreamBuilding>true</blockBuildWhenUpstreamBuilding>
                        <triggers>
                          <trigger>
                            <type>github</type>
                          </trigger>
                        </triggers>
                        <process>
                          {{
                          node.scm[0].pruneBranches[0].setValue('true')
                          node.ignoreUpstremChanges[0].setValue('false')
                          }}
                        </process>
                      </job>
                    </jobs>
                  </configuration>
                </execution>
              </executions>
            </plugin>
            <plugin>
              <groupId>org.codehaus.gmaven</groupId>
              <artifactId>gmaven-plugin</artifactId>
              <version>1.5</version>
              <dependencies>
                <dependency>
                  <groupId>org.apache.httpcomponents</groupId>
                  <artifactId>httpclient</artifactId>
                  <version>4.2.2</version>
                </dependency>
              </dependencies>
              <executions>
                <execution>
                  <phase>install</phase>
                  <goals>
                    <goal>execute</goal>
                  </goals>
                  <configuration>
                    <providerSelection>1.8</providerSelection>
                    <source>
                      import org.apache.http.*;
                      import org.apache.http.client.*;
                      import org.apache.http.client.methods.*;
                      import org.apache.http.entity.*;
                      import org.apache.http.impl.client.*;
                      import org.apache.http.auth.*

                      def jenkinsId = project.properties['jenkins.id']
                      def jenkinsUrl = project.properties['jenkins.url']
                      def jenkinsUser = project.properties['jenkins.user']
                      assert jenkinsUrl != null, "User must be passed with -Djenkins.user=(username)"
                      def jenkinsPass = project.properties['jenkins.pass']
                      assert jenkinsPass != null, "Password must be passed with -Djenkins.pass=(username)"

                      // Read config.xml into string
                      def content = new File("${project.build.directory}/${jenkinsId}/config.xml").text

                      def client = new DefaultHttpClient();

                      client.getCredentialsProvider().setCredentials(AuthScope.ANY,
                          new UsernamePasswordCredentials(jenkinsUser, jenkinsPass));

                      def post = new HttpPost("${jenkinsUrl}createItem?name=${jenkinsId}");
                      post.setHeader("Content-Type", "text/xml")
                      post.setEntity(new StringEntity(content))
                      HttpResponse response = client.execute(post);
                      assert response.getStatusLine().getStatusCode() == 200
                    </source>
                  </configuration>
                </execution>
              </executions>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
  </profiles>
</project>
